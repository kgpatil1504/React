{"ast":null,"code":"var _jsxFileName = \"G:\\\\vs code\\\\firstreactapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let newTime = new Date().toLocaleTimeString();\n  const [ctime, setCtime] = useState(newTime);\n\n  const UpdateTime = () => {\n    let newCTime = new Date().toLocaleTimeString();\n    setCtime(newCTime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", ctime, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: UpdateTime,\n      children: \" get Time \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"xQ1nzcFQY0FVDL/fS77EGzSNn7k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/vs code/firstreactapp/src/App.jsx"],"names":["React","useState","App","newTime","Date","toLocaleTimeString","ctime","setCtime","UpdateTime","newCTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEf,MAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAd;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,OAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACtB,QAAIC,QAAQ,GAAG,IAAIL,IAAJ,GAAWC,kBAAX,EAAf;AACAE,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACF,GAHD;;AAOA,sBACG;AAAA,4BACG;AAAA,sBAAMH,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA,kBADH;AAMF,CAnBD;;GAAMN,G;;KAAAA,G;AAsBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n   let newTime = new Date().toLocaleTimeString();\r\n\r\n   const [ctime, setCtime] = useState(newTime);\r\n\r\n   const UpdateTime = () => {\r\n      let newCTime = new Date().toLocaleTimeString();\r\n      setCtime(newCTime);\r\n   };\r\n\r\n\r\n\r\n   return (\r\n      <>\r\n         <h1> {ctime} </h1>\r\n         <button onClick={UpdateTime}> get Time </button>\r\n      </>\r\n   );\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}