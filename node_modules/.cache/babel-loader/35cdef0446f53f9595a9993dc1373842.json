{"ast":null,"code":"var _jsxFileName = \"G:\\\\vs code\\\\firstreactapp\\\\src\\\\SlotMach.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlotM = props => {\n  // let x = 'ðŸ˜„';\n  // let y = 'ðŸ˜„';\n  // let z = 'ðŸŽ…';\n  // let x = props.x;\n  // let y =props.y;\n  // let z = props.z;\n  let {\n    x,\n    y,\n    z\n  } = props;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", x, \" \", y, \" \", z, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" This is Maching. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", x, \" \", y, \" \", z, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" This is Not Maching. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = SlotM;\nexport default SlotM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"sources":["G:/vs code/firstreactapp/src/SlotMach.jsx"],"names":["React","SlotM","props","x","y","z"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAI;AAACC,IAAAA,CAAD;AAAGC,IAAAA,CAAH;AAAKC,IAAAA;AAAL,MAAUH,KAAd;;AAEA,MAAKC,CAAC,KAAKC,CAAP,IAAcA,CAAC,KAAKC,CAAxB,EAA4B;AACzB,wBACG;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACG;AAAA,0BAAMF,CAAN,OAAUC,CAAV,OAAcC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAA;AAAA;AAAA;AAAA,gBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADH;AASF,GAVD,MAUO;AACJ,wBACG;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACG;AAAA,0BAAMF,CAAN,OAAUC,CAAV,OAAcC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAA;AAAA;AAAA;AAAA,gBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADH;AASF;AACH,CAhCF;;KAAMJ,K;AAkCL,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nconst SlotM = (props) => {\r\n    // let x = 'ðŸ˜„';\r\n    // let y = 'ðŸ˜„';\r\n    // let z = 'ðŸŽ…';\r\n \r\n    // let x = props.x;\r\n    // let y =props.y;\r\n    // let z = props.z;\r\n\r\n    let {x,y,z} = props;\r\n \r\n    if ((x === y) && (y === z)) {\r\n       return (\r\n          <>\r\n             <div className=\"slot_inner\">\r\n                <h1> {x} {y} {z}  </h1>\r\n                <h1> This is Maching. </h1>\r\n                <hr />\r\n             </div>\r\n          </>\r\n       );\r\n    } else {\r\n       return (\r\n          <>\r\n             <div className=\"slot_inner\">\r\n                <h1> {x} {y} {z}  </h1>\r\n                <h1> This is Not Maching. </h1>\r\n                <hr />\r\n             </div>\r\n          </>\r\n       );\r\n    }\r\n }\r\n\r\n export default SlotM;"]},"metadata":{},"sourceType":"module"}